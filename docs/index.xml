<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Mach: zig game engine &amp; graphics toolkit</title><link>https://machengine.org/docs/</link><description>Recent content in Docs on Mach: zig game engine &amp; graphics toolkit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://machengine.org/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started</title><link>https://machengine.org/docs/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/docs/getting-started/</guid><description>Mach is in early-stages of development.
Getting Started using Mach Coming soon.
See also: the Mach standard library, and &amp;lsquo;Using mach.math as a separate library&amp;rsquo;.</description></item><item><title>Mach modularity</title><link>https://machengine.org/docs/modularity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/docs/modularity/</guid><description>Modularity Mach aims to be opinionated enough to provide a cohesive high-level experience, but modular enough to let you use only a subset of it.
&amp;lsquo;standard library&amp;rsquo; of Zig gamedev modules Mach is a &amp;lsquo;standard library&amp;rsquo; of Zig gamedev modules. For example, you can import and use just specific parts of Mach like the mach.math library and use these to build your own engine.
Alternative to GLFW/SDL + OpenGL/Vulkan, Raylib, etc Many folks join the Mach and Zig communities looking to &amp;lsquo;make games mostly from scratch&amp;rsquo; using something minimal like GLFW+OpenGL, SDL+Vulkan, Raylib, etc.</description></item><item><title>Nominated Zig versions</title><link>https://machengine.org/docs/nominated-zig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/docs/nominated-zig/</guid><description>Nominated Zig versions Periodically we nominate a new Zig nightly version which all Mach projects target and use.
We encourage others to adopt the same Zig version Mach uses, since Zig packages which target latest nightly (or the latest stable release) will very often be incompatible otherwise.
Why nominated Zig versions, instead of nightly or stable? TL;DR: it&amp;rsquo;s a sweetspot between stable and nightly.
Stable releases occur just once or twice per year, nominated Zig versions occur several times per year - but not every day like nightly.</description></item><item><title>Roadmap</title><link>https://machengine.org/docs/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/docs/roadmap/</guid><description>Roadmap There is a long road ahead: it&amp;rsquo;s going to require a lot of work and time to get to where we are going.
You can find the roadmap here</description></item><item><title>Standard library</title><link>https://machengine.org/docs/stdlib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/docs/stdlib/</guid><description>Standard library The Mach standard library can be found at: github.com/hexops/mach - it is modular by design. Just like the Zig standard library, you can choose which parts to use or not.
Thanks to Zig&amp;rsquo;s lazy code evaluation and lazy dependency fetching, you really only pay for the parts you use.
Choosing your Mach version 0.4 branch (not actively developed, but more stable) The 0.4 branch is what applications like Pixi and games like #lordofzero (in the Discord) are using.</description></item><item><title>Zig version</title><link>https://machengine.org/docs/zig-version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/docs/zig-version/</guid><description>Zig version Mach nominates specific Zig nightly versions periodically, these are what Mach is built and tested against. Other versions, such as stable or latest-nightly releases, are usually incompatible.
We encourage using Mach nightly (main, rather than a tagged release) for now.
Supported Zig versions Mach version Zig version latest main Zig 2024.5.0-mach v0.4 Zig 2024.5.0-mach v0.3 Zig 2024.1.0-mach v0.2 v0.11.0</description></item></channel></rss>