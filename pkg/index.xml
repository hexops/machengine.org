<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Standalone packages on Mach: zig game engine &amp; graphics toolkit</title><link>https://machengine.org/pkg/</link><description>Recent content in Standalone packages on Mach: zig game engine &amp; graphics toolkit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://machengine.org/pkg/index.xml" rel="self" type="application/rss+xml"/><item><title>C packages</title><link>https://machengine.org/pkg/c/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/c/</guid><description>C libraries &amp;amp; headers packaged via the Zig build system Mach provides an ecosystem of C libraries via the Zig package manager.
These arenâ€™t Zig bindings to these libraries (which we have separately), but instead are just forks of the actual project with their build system replaced by build.zig so you can depend on them and build them using the Zig package manager.
Pure forks with build.zig:
brotli harfbuzz freetype glfw opus opusfile opusenc flac ogg spirv-tools spirv-cross Header packages:</description></item><item><title>fastfilter</title><link>https://machengine.org/pkg/fastfilter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/fastfilter/</guid><description>fastfilter Binary fuse &amp;amp; xor filters for Zig (faster and smaller than bloom filters)
GitHub repository | Issue tracker Getting started Create a build.zig.zon in your project (replace LATEST_COMMIT with the latest commit hash):
.{ .name = &amp;#34;mypkg&amp;#34;, .version = &amp;#34;0.1.0&amp;#34;, .dependencies = .{ .fastfilter = .{ .url = &amp;#34;https://pkg.machengine.org/fastfilter/LATEST_COMMIT.tar.gz&amp;#34;, }, }, } Run zig build in your project, and the compiler will instruct you to add a .hash = &amp;quot;.</description></item><item><title>mach basisu</title><link>https://machengine.org/pkg/mach-basisu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-basisu/</guid><description>No longer supported as an official Mach project. The code has moved to github.com/slimsag/mach-basisu and may not be maintained to the same standard as official Mach projects.
Additional details: https://github.com/hexops/mach/issues/965
View the older v0.3 documentation: https://machengine.org/v0.3/pkg/mach-basisu</description></item><item><title>mach dusk</title><link>https://machengine.org/pkg/mach-dusk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-dusk/</guid><description>This page has moved: Mach sysgpu</description></item><item><title>mach dxcompiler</title><link>https://machengine.org/pkg/mach-dxcompiler/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-dxcompiler/</guid><description>mach-dxcompiler The DirectX shader compiler, built better. GitHub repository | Issue tracker See &amp;lsquo;Building the DirectX shader compiler better than Microsoft?&amp;rsquo; for details/background information.
Features Statically linked dxcompiler library and dxc executables. Zero dependency on proprietary dxil.dll code-signing blob (see: Mach Siegbert Vogt DXCSA) Built using build.zig instead of 10k+ LOC CMake build system. Prebuilt binaries provided for many OS/arch. Binaries for macOS and aarch64 Linux (first ever in history), among others.</description></item><item><title>mach earcut</title><link>https://machengine.org/pkg/mach-earcut/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-earcut/</guid><description>No longer supported as an official Mach project. The code has moved to github.com/slimsag/mach-earcut and may not be maintained to the same standard as official Mach projects.
Additional details: https://github.com/hexops/mach/issues/967
View the older v0.2 documentation: https://machengine.org/v0.2/pkg/mach-earcut</description></item><item><title>mach ecs</title><link>https://machengine.org/pkg/mach-ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-ecs/</guid><description>GitHub repository | Issue tracker The Mach entity component system, written from first-principles and designed for deep tooling capabilities.
Initially a 100% clean-room implementation, working from first-principles; later informed by research into how other open-source ECS work. Enable deep tooling to provide tracing, editors, visualizers, profilers, etc. Fast, optimal for CPU caches, multi-threaded, leverage comptime for type safety. Dynamic, allow for very flexible runtime capabilities. We&amp;rsquo;re publishing a blog series &amp;ldquo;Let&amp;rsquo;s build an Entity Component System from scatch&amp;rdquo; as we go.</description></item><item><title>mach flac</title><link>https://machengine.org/pkg/mach-flac/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-flac/</guid><description>GitHub repository | Issue tracker FLAC audio decoding and encoding for Zig via the battle-hardened xiph.org libflac
Zero-fuss installation, cross-compilation at the flip of a switch, and broad platform support. Encoding &amp;amp; decoding support Experimental This is an experimental project according to our stability guarantees:
When a project has an experimental warning, it means all bets are off. You should carefully read the warning to understand why the project is experimental, and assume the worst.</description></item><item><title>mach freetype</title><link>https://machengine.org/pkg/mach-freetype/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-freetype/</guid><description>GitHub repository | Issue tracker Ziggified Freetype 2 bindings with zero-fuss installation, cross compilation, and more.
Zero-fuss installation, cross-compilation at the flip of a switch, and broad platform support. Very good API coverage, almost every function, type, constant, etc. has been exposed in a ziggified API. Getting started Create a build.zig.zon in your project (replace LATEST_COMMIT with the latest commit hash):
.{ .name = &amp;#34;mypkg&amp;#34;, .version = &amp;#34;0.1.0&amp;#34;, .dependencies = .</description></item><item><title>mach gamemode</title><link>https://machengine.org/pkg/mach-gamemode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-gamemode/</guid><description>GitHub repository | Issue tracker Make your Linux games go brrr
Enables Linux games written in Zig to request gamemode be enabled, opting in to various CPU, GPU, and kernel optimizations. If the user&amp;rsquo;s machine doesn&amp;rsquo;t have gamemode, it simply does nothing. There are no dependencies and your game will still run without it normally.
This is preferred as it means your game will automatically invoke gamemode for the user when running, rather than them having to manually enable it.</description></item><item><title>mach glfw</title><link>https://machengine.org/pkg/mach-glfw/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-glfw/</guid><description>GitHub repository | Issue tracker Perfected GLFW bindings for Zig, with 100% API coverage, zero-fuss installation, cross compilation, and more.
Zero-fuss installation, cross-compilation at the flip of a switch, and broad platform support. 100% API coverage. Every function, type, constant, etc. has been exposed in a ziggified API. What does a ziggified GLFW API offer? Enums, always know what value a GLFW function can accept as everything is strictly typed.</description></item><item><title>mach gpu</title><link>https://machengine.org/pkg/mach-gpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-gpu/</guid><description>GitHub repository | Issue tracker The WebGPU interface for Zig, featuring:
Zero-fuss installation, cross-compilation at the flip of a switch, and broad platform support. 100% API coverage. Every function, type, constant, etc. has been exposed in a ziggified API. Desktop, Steam Deck, (soon) web, and (future) mobile support. A modern graphics API similar to Metal, Vulkan, and DirectX 12. Cross-platform shading language Compute shaders Advanced GPU features where hardware support is available.</description></item><item><title>mach gpu-dawn</title><link>https://machengine.org/pkg/mach-gpu-dawn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-gpu-dawn/</guid><description>GitHub repository | Issue tracker Google&amp;rsquo;s Dawn WebGPU implementation, cross-compiled with Zig into a single static library, requiring nothing more than zig and git to build and cross-compile a static Dawn library for every OS:
No cmake No ninja No gn No system dependencies (xcode, etc.) Automagic cross compilation out of the box with nothing more than zig and git! Builds a single static libdawn.a Building from source This will take ~10 minutes to finish, so by default when using this package a prebuilt binary version of Dawn (see the &amp;lsquo;binary releases&amp;rsquo; section below) but you can always build Dawn from source using:</description></item><item><title>mach model3d</title><link>https://machengine.org/pkg/mach-model3d/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-model3d/</guid><description>No longer supported as an official Mach project. The code has moved to github.com/slimsag/mach-model3d and may not be maintained to the same standard as official Mach projects.
Additional details: https://github.com/hexops/mach/issues/969
View the older v0.3 documentation: https://machengine.org/v0.3/pkg/mach-model3d</description></item><item><title>mach opus</title><link>https://machengine.org/pkg/mach-opus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-opus/</guid><description>GitHub repository | Issue tracker Opus audio decoding and encoding for Zig via the battle-hardened xiph.org libopus and libopusfile
Experimental This is an experimental project according to our stability guarantees:
When a project has an experimental warning, it means all bets are off. You should carefully read the warning to understand why the project is experimental, and assume the worst.
Tracking issue: https://github.com/hexops/mach/issues/961
Getting started Create a build.zig.zon in your project (replace LATEST_COMMIT with the latest commit hash):</description></item><item><title>mach sysaudio</title><link>https://machengine.org/pkg/mach-sysaudio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-sysaudio/</guid><description>GitHub repository | Issue tracker Truly cross-platform, low-level, audio IO in Zig - playback and recording with backends for:
Linux PulseAudio PipeWire Jack ALSA Windows: WASAPI macOS/iOS: CoreAudio WebAssembly: WebAudio Getting started First add the Mach standard library to your project so you can @import(&amp;quot;mach&amp;quot;).sysaudio.
Then check out some example code for usage.
Ran into trouble? Feel free to join the Mach Discord community for help.</description></item><item><title>mach sysgpu</title><link>https://machengine.org/pkg/mach-sysgpu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-sysgpu/</guid><description>GitHub repository | Issue tracker Highly experimental, blazingly fast, lean &amp;amp; mean descendant/successor of WebGPU native written in Zig.
Experimental This is an experimental project according to our stability guarantees:
When a project has an experimental warning, it means all bets are off. You should carefully read the warning to understand why the project is experimental, and assume the worst.
Tracking issue: https://github.com/hexops/mach/issues/966
History In Mach v0.2 we announced an experiment to write a WebGPU implementation in Zig.</description></item><item><title>mach sysjs</title><link>https://machengine.org/pkg/mach-sysjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/pkg/mach-sysjs/</guid><description>GitHub repository | Issue tracker Enables Zig &amp;lt;-&amp;gt; JS interoperability via code generation, with complex type support.
Experimental This is an experimental project according to our stability guarantees:
When a project has an experimental warning, it means all bets are off. You should carefully read the warning to understand why the project is experimental, and assume the worst.
Tracking issue: https://github.com/hexops/mach/issues/970</description></item></channel></rss>