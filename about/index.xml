<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The project on Mach: zig game engine &amp; graphics toolkit</title><link>https://machengine.org/about/</link><description>Recent content in The project on Mach: zig game engine &amp; graphics toolkit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://machengine.org/about/index.xml" rel="self" type="application/rss+xml"/><item><title>FAQ</title><link>https://machengine.org/about/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/faq/</guid><description>Frequently asked questions Experimental Today, Mach is rather experimental.
There won&amp;rsquo;t be one major event where it is suddenly declared stable, rather it will be a bunch of small/incremental releases building up to it. You can look at the roadmap to get an idea of what we&amp;rsquo;re working on currently, and what will come later.
Can I use Mach to make a simple 2D game? Quite possibly! Check out Lord of Zero and Pixi for some ideas of what you could do.</description></item><item><title>Known issues</title><link>https://machengine.org/about/known-issues/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/known-issues/</guid><description>Known issues This page no longer exists. Maybe you want to view the old version of this page.</description></item><item><title>nixOS usage</title><link>https://machengine.org/about/nixos-usage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/nixos-usage/</guid><description>Using Mach on nixOS If you use nixOS and want to use Mach, this document is for you!
option 1: mach-flake A generous member of the community maintains mach-flake, a flake that allows you to get started with Mach quickly.
option 2: usage via nix-ld Use nix-ld following e.g. this article.
For example this shell:
with import &amp;lt;nixpkgs&amp;gt; {}; mkShell { NIX_LD_LIBRARY_PATH = lib.makeLibraryPath [ pkgs.xorg.libX11 pkgs.vulkan-loader ]; NIX_LD = lib.</description></item><item><title>Nominated Zig versions</title><link>https://machengine.org/about/nominated-zig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/nominated-zig/</guid><description>Moved This page has moved: Nominated Zig versions
or view the old version of this page.</description></item><item><title>Platform support</title><link>https://machengine.org/about/platforms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/platforms/</guid><description>Platform support We aim to support a broad array of operating systems and architectures, as long as they are reasonably used by desktop/mobile consumers, or someone would like to contribute and maintain support for them.
OS x86_64 aarch64 WebAssembly notes macOS üèÉ üèÉ last 3 major versions supported; Windows üèÉ üèÉ windows 7+ supported; ARM support is WIP Linux üèÉ üèÉ SteamOS (deck) üèÉ truly native (Vulkan); no controller/OS integration yet; demo video Browser üèÉ WebGPU not working; audio, input, recompile-on-reload, etc.</description></item><item><title>Project goals</title><link>https://machengine.org/about/goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/goals/</guid><description>Project goals This page covers general project goals of Mach. Besides what you see on the homepage, we care about..
Zero-fuss installation All too often we see people get a sudden burst of inspiration: "I'm going to finally start my game/app this weekend!" only to see them utlimately get bogged down by setting up their dev environment, ending their weekend with "well.. at least I got the hello world running" - there is no greater drain on human inspiration.</description></item><item><title>Stability</title><link>https://machengine.org/about/stability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/stability/</guid><description>Stability This page no longer exists. Maybe you want to view the old version of this page.</description></item><item><title>Style guide</title><link>https://machengine.org/about/style/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/style/</guid><description>Style guide Use mach.testing where applicable In the main Mach repository we have the mach.testing module, which provides alternatives to std.testing equality methods with:
Less ambiguity about order of parameters Approximate absolute float equality by default Handling of vector and matrix types You should use mach.testing wherever it is accessible (without pulling in an additional dependency.)
usingnamespace is prohibited usingnamespace in general is prohibited from use in Mach code, it allows one to &amp;lsquo;mixin&amp;rsquo; namespaces and in our view tends to produce increasingly worse code quality over time.</description></item><item><title>Zig version</title><link>https://machengine.org/about/zig-version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/about/zig-version/</guid><description>Moved This page has moved: Zig version
or view the old version of this page.</description></item></channel></rss>