<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Engine overview on Mach: zig game engine &amp; graphics toolkit</title><link>https://machengine.org/v0.4/engine/</link><description>Recent content in Engine overview on Mach: zig game engine &amp; graphics toolkit</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://machengine.org/v0.4/engine/index.xml" rel="self" type="application/rss+xml"/><item><title>Engine modularity</title><link>https://machengine.org/v0.4/engine/modularity/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/v0.4/engine/modularity/</guid><description>Modularity Historically, we believe there are three types of approaches to game development:
Description Opinionated? Modularity? Note Libraries Not at all Extremely No natural interoperability, lots of glue code required Frameworks Somewhat Very Often unable to provide high-level experiences due to modularity Engines Extremely Not at all Provides high-level experiences but makes rigid choices on your behalf The Mach project provides some Libraries, but mostly aims to sit between Frameworks and Engines.</description></item><item><title>Engine roadmap</title><link>https://machengine.org/v0.4/engine/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/v0.4/engine/roadmap/</guid><description>Engine roadmap There is a long road ahead: it&amp;rsquo;s going to require a lot of work and time to get to where we are going.
You can find the roadmap here</description></item><item><title>Getting started</title><link>https://machengine.org/v0.4/engine/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/v0.4/engine/getting-started/</guid><description>Mach engine is not ready for use yet and is in very early-stages of development.
FAQ: "Can I use Mach to make a simple 2D game?"
Getting Started with Mach engine Coming soon.
See also: the Mach standard library, and &amp;lsquo;Using mach.math as a separate library&amp;rsquo;.</description></item><item><title>Standard library</title><link>https://machengine.org/v0.4/engine/stdlib/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://machengine.org/v0.4/engine/stdlib/</guid><description>Standard library The Mach standard library can be found at: github.com/hexops/mach - it is modular by design. Just like the Zig standard library, you can choose which parts to use or not.
Thanks to Zig&amp;rsquo;s lazy code evaluation and lazy dependency fetching, you really only pay for the parts you use.
Getting started Add the Mach dependency to your build.zig.zon file:
zig fetch --save https://pkg.machengine.org/mach/$LATEST_COMMIT.tar.gz Then make it importable by your code in build.</description></item></channel></rss>